version: '3'

services:
  crdb:
    image: ${DOCKER_REGISTRY}hedwi/cockroach:v23.2.5
    restart: always
    command: start-single-node --insecure --listen-addr=${CRDB_ADDR} --http-addr=${CRDB_WEB_ADDR}
    volumes:
     - ./crdb/data:/cockroach/cockroach-data
    network_mode: "host"

  crdb-init:
    image: ${DOCKER_REGISTRY}hedwi/cockroach:v23.2.5
    restart: on-failure:5
    volumes:
      - ./crdb/setup_db.sh:/setup_db.sh
    entrypoint: "/bin/bash"
    command: /setup_db.sh
    network_mode: "host"
    depends_on:
     - crdb

  minio:
    image: ${DOCKER_REGISTRY}hedwi/minio:RELEASE.2024-06-11T03-13-30Z
    restart: always
    container_name: hedwi_minio
    command: server /data/www/minio --address ${MINIO_ADDR} --console-address ${MINIO_WEB_ADDR}
    network_mode: "host"
    environment:
      MINIO_ACCESS_KEY: "${MINIO_USER}"
      MINIO_SECRET_KEY: "${MINIO_PASSWORD}"
    logging:
      options:
        max-size: "10M"
        max-file: "10"
      driver: json-file
    volumes:
      - ./minio/data:/data/www/minio
      - ./minio/config:/root/.minio

  consul:
    image: ${DOCKER_REGISTRY}hedwi/consul:1.18
    container_name: hedwi_consul
    restart: always
    command: ["consul","agent","-server","-bootstrap","-data-dir","/consul","-ui","-bind","${BINDIP}","-client","0.0.0.0"]
    network_mode: "host"

  nats:
    image: ${DOCKER_REGISTRY}hedwi/nats:2.9.25
    container_name: hedwi_nats
    restart: always
    command: -c /etc/nats/nats.conf
    volumes:
      - ./nats/nats.conf:/etc/nats/nats.conf
      - ./nats/data:/data
    network_mode: "host"

  redis:
    image: ${DOCKER_REGISTRY}hedwi/redis:6.0
    restart: always
    container_name: hedwi_redis
    volumes:
      - ./redis/data:/data/redis
      - ./redis/logs/redis.log:/data/logs/redis.log
      - ./redis/redis.conf:/etc/redis/redis.conf
    command:
      redis-server /etc/redis/redis.conf
    network_mode: "host"

  
  meet-server:
    image: ${DOCKER_REGISTRY}hedwi/hedwi-meetserver:latest
    restart: always
    volumes:
      - ./meetserver/config.yaml:/data/www/hedwi-meetserver/config.yaml
    working_dir: /data/www/hedwi-meetserver
    command: ["/data/www/hedwi-meetserver/hedwi-meetserver"]
    network_mode: "host"
    environment:
      DOMAIN: "${DOMAIN}"
      HEDWI_MEET_ADDR: "${MEET_ADDR}"
      REDIS_ADDR: "${REDIS_ADDR}"
      REDIS_USER: "${REDIS_USER}"
      REDIS_PASSWORD: "${REDIS_PASSWORD}"
      HEDWI_MEET_KEY: "${MEET_KEY}"
      HEDWI_MEET_SECRET: "${MEET_SECRET}"
    depends_on:
      - redis

  office-api:
    image: ${DOCKER_REGISTRY}hedwi/hedwi-office-api:latest
    container_name: hedwi_office_api       #容器的名称
    command: ["/data/www/hedwi-office-api/hedwi-office-api"]
    restart: always
    tty: true
    volumes:
      - ./office-api/logs:/data/www/hedwi-office-api/logs
    network_mode: "host"
    environment:
      HEDWI_OFFICE_API_ADDR: "${OFFICE_API_ADDR}"
      HEDWI_SQLDB: "postgresql://root@${CRDB_ADDR}/${DB_NAME}"
      HEDWI_OSS_PUBLIC_ADDR: "${DOMAIN}"
      HEDWI_OSS_ADDR: "${MINIO_ADDR}"
      HEDWI_OSS_ACCESS_KEY: "${MINIO_USER}"
      HEDWI_OSS_ACCESS_SECRET: "${MINIO_PASSWORD}"
      HEDWI_OSS_USE_SSL: "${MINIO_USESSL}"
      HEDWI_OSS_DRIVE_BUCKET_NAME: "drive"
    depends_on:
       - crdb
       - crdb-init
       - minio

  
  search:
    image: ${DOCKER_REGISTRY}hedwi/hedwi-search:latest
    container_name: hedwi_search       #容器的名称
    command: ["/data/www/hedwi-search/hedwi-search"]
    restart: always
    tty: true
    volumes:
      - ./search/logs:/data/www/hedwi-search/logs
      - ./search/data:/data/www/hedwi-search/data
    network_mode: "host"
    environment:
      HEDWI_SEARCH_RPC_ADDR: "${SEARCH_ADDR}"
      HEDWI_CONSUL: "${CONSUL_ADDR}"
    depends_on:
       - consul

  web:
    image: ${DOCKER_REGISTRY}hedwi/hedwi-inbox:latest
    command: ["/data/www/hedwi-inbox/hedwi-inbox"]
    container_name: inboxserver
    restart: always
    tty: true
    volumes:
      - ./inbox/logs:/data/www/hedwi-inbox/logs
      - ./inbox/certs:/tmp/hedwi_certs
      - /etc/ssl/certs/ca-bundle.crt:/etc/ssl/certs/ca-bundle.crt
      - /etc/ssl/certs/ca-bundle.trust.crt:/etc/ssl/certs/ca-bundle.trust.crt
    network_mode: "host"
    environment:
      HEDWI_LICENSE: "${HEDWI_LICENSE}"
      HEDWI_ADMIN_EMAIL: "${ADMIN_EMAIL}"
      HEDWI_ADMIN_PASSWORD: "${ADMIN_PASSWORD}"
      HEDWI_OFFICE_SERVER: "http://${OFFICE_API_ADDR}"
      HEDWI_CERT_DIR: "${CERT_DIR}"
      HEDWI_MEET_SERVER: "${MEET_SERVER}"
      HEDWI_MEET_KEY: "${MEET_KEY}"
      HEDWI_MEET_SECRET: "${MEET_SECRET}"
      HEDWI_MQTT_PUBLIC_ADDR: "${MQTT_PROTOCOL}://${DOMAIN}:${MQTT_PUBLIC_PORT}"
      HEDWI_MQTT_CLIENT_ID: "${MQTT_ID}"
      HEDWI_MQTT_ADDR: "${MQTT_IP}:${MQTT_PORT}"
      HEDWI_FROMUSER: ""
      HEDWI_HUB_RPC_ADDR: "${HUB_ADDR}"
      HEDWI_SEARCH_RPC_ADDR: "${SEARCH_ADDR}"
      HEDWI_FILTER_RPC_ADDR: "${FILTER_ADDR}"
      HEDWI_CONSUL: "${CONSUL_ADDR}"
      HEDWI_SQLDB: "postgresql://root@${CRDB_ADDR}/${DB_NAME}"
      HEDWI_HTTP_ADDR: "${BINDIP}:40008"
      HEDWI_ALLOW_ORIGIN: "${ALLOW_ORIGIN}"
      HEDWI_OSS_PUBLIC_ADDR: "${DOMAIN}"
      HEDWI_OSS_ADDR: "${MINIO_ADDR}"
      HEDWI_OSS_ACCESS_KEY: "${MINIO_USER}"
      HEDWI_OSS_ACCESS_SECRET: "${MINIO_PASSWORD}"
      HEDWI_OSS_USE_SSL: "${MINIO_USESSL}"
      HEDWI_OSS_DRIVE_BUCKET_NAME: "drive"
      HEDWI_OSS_MAIL_BUCKET_NAME: "hedwimail"
      HEDWI_SESSION_HEDIS_HOST: "${REDIS_ADDR}"
      HEDWI_SESSION_HEDIS_PASSWORD: ""
      HEDWI_SESSION_HEDIS_DB: "1"
      HEDWI_SESSION_HEDIS_POOLSIZE: "10"
      HEDWI_CACHE_HEDIS_HOST: "${REDIS_ADDR}"
      HEDWI_CACHE_HEDIS_PASSWORD: ""
      HEDWI_CACHE_HEDIS_DB: "0"
      HEDWI_CACHE_HEDIS_POOLSIZE: "20"
      HEDWI_PUBLIC_DRIVE_PREFIX: "${PUBLIC_DRIVE_PREFIX}"
    depends_on:
      #- db
       - crdb
       - crdb-init
       - redis
       - minio
       - consul
       - office-api
       - hub
       - search
       - meet-server
       - mqtt

  mqtt:
    image: ${DOCKER_REGISTRY}hedwi/hedwi-mqtt:latest
    container_name: hedwi_mqtt
    command: ["/data/www/hedwi-mqtt/hedwi-mqtt"]
    restart: always
    tty: true
    volumes:
      - ./mqtt/logs:/data/www/hedwi-mqtt/logs
    network_mode: "host"
    environment:
      HEDWI_MQTT_CLIENT_ID: "${MQTT_ID}"
      HEDWI_MQTT_ADDR: "${MQTT_IP}:${MQTT_PORT}"
      HEDWI_SESSION_HEDIS_HOST: "${REDIS_ADDR}"
      HEDWI_SESSION_HEDIS_PASSWORD: ""
      HEDWI_SESSION_HEDIS_DB: "1"
      HEDWI_SESSION_HEDIS_POOLSIZE: "10"
    depends_on:
       - redis


  hub:
    image: ${DOCKER_REGISTRY}hedwi/hedwi-hub:latest
    container_name: hedwi_hub
    command: ["/data/www/hedwi-hub/hedwi-hub"]
    restart: always
    tty: true
    volumes:
      - ./hub/logs:/data/www/hedwi-hub/logs
    network_mode: "host"
    environment:
      HEDWI_HUB_RPC_ADDR: "${HUB_ADDR}"
      HEDWI_SQLDB: "postgresql://root@${CRDB_ADDR}/${DB_NAME}"
      HEDWI_CONSUL: "${CONSUL_ADDR}"
      HEDWI_SESSION_HEDIS_HOST: "${REDIS_ADDR}"
      HEDWI_SESSION_HEDIS_PASSWORD: ""
      HEDWI_SESSION_HEDIS_DB: "1"
      HEDWI_SESSION_HEDIS_POOLSIZE: "10"
      HEDWI_OSS_PUBLIC_ADDR: "${DOMAIN}"
      HEDWI_OSS_ADDR: "${MINIO_ADDR}"
      HEDWI_OSS_ACCESS_KEY: "${MINIO_USER}"
      HEDWI_OSS_ACCESS_SECRET: "${MINIO_PASSWORD}"
      HEDWI_OSS_USE_SSL: "${MINIO_USESSL}"
      HEDWI_OSS_MAIL_BUCKET_NAME: "hedwimail"
      HEDWI_OSS_DRIVE_BUCKET_NAME: "drive"
      HEDWI_NATS_URL: "${NATS_URL}"
      HEDWI_NATS_CLUSTER_ID: "hedwi"
      HEDWI_NATS_TASK_CLIENT_ID: "hedwi-service-a"
      HEDWI_NATS_TASK_MAIL_SEND_SUBJECT: "hedwi-send"
      HEDWI_NATS_TASK_MAIL_SAVE_SUBJECT: "hedwi-save"
    depends_on:
       - crdb
       - redis
       - nats
       - minio
       - consul
       - search

  task:
    image: ${DOCKER_REGISTRY}hedwi/hedwi-task:latest
    container_name: hedwi_task
    command: ["/data/www/hedwi-task/hedwi-task"]
    restart: always
    tty: true
    volumes:
      - ./task/logs:/data/www/hedwi-task/logs
    network_mode: "host"
    environment:
      HEDWI_SQLDB: "postgresql://root@${CRDB_ADDR}/${DB_NAME}"
      HEDWI_SMTP_ADDRESSES: "${SMTP_ADDR}"
      HEDWI_LOCAL_SMTP: "${DOMAIN}:42025"
      HEDWI_CONSUL: "${CONSUL_ADDR}"
      HEDWI_SESSION_HEDIS_HOST: "${REDIS_ADDR}"
      HEDWI_SESSION_HEDIS_PASSWORD: ""
      HEDWI_SESSION_HEDIS_DB: "1"
      HEDWI_SESSION_HEDIS_POOLSIZE: "10"
      HEDWI_OSS_PUBLIC_ADDR: "${DOMAIN}"
      HEDWI_OSS_ADDR: "${MINIO_ADDR}"
      HEDWI_OSS_ACCESS_KEY: "${MINIO_USER}"
      HEDWI_OSS_ACCESS_SECRET: "${MINIO_PASSWORD}"
      HEDWI_OSS_USE_SSL: "${MINIO_USESSL}"
      HEDWI_OSS_MAIL_BUCKET_NAME: "hedwimail"
      HEDWI_OSS_DRIVE_BUCKET_NAME: "drive"
      HEDWI_NATS_URL: "${NATS_URL}"
      HEDWI_NATS_CLUSTER_ID: "hedwi"
      HEDWI_NATS_TASK_CLIENT_ID: "hedwi-service-a"
      HEDWI_NATS_TASK_MAIL_SEND_SUBJECT: "hedwi-send"
      HEDWI_NATS_TASK_MAIL_SAVE_SUBJECT: "hedwi-save"
    depends_on:
       - crdb
       - redis
       - nats
       - minio
       - consul
       - search

  smtp:
    image: ${DOCKER_REGISTRY}hedwi/hedwi-smtp:latest
    command: ["/data/www/hedwi-smtp/hedwi-smtp"]
    restart: always
    tty: true
    volumes:
      - ./smtp/logs:/data/www/hedwi-smtp/logs
      - ./smtp/data:/data/www/hedwi-smtp/data
      - ./smtp/certs:/tmp/hedwi_certs
    network_mode: "host"
    environment:
      DOMAIN: "${DOMAIN}"
      HEDWI_SELF_DOMAIN: "${DOMAIN}"
      HEDWI_SMTP_KEY: "hedwi-smtp-bucket"
      HEDWI_SMTP_HOSTNAME: ""
      HEDWI_SMTP_MAX_DATASIZE: "50"
      HEDWI_SMTP_DATA_DIR: "/data/www/hedwi-smtp/data"
      HEDWI_CERT_DIR: "${CERT_DIR}"
      HEDWI_SMTP_ADDRESSES: "${SMTP_ADDR}"
      HEDWI_SMTP_SUBMISSION_ADDRESSES: "systemd"
      HEDWI_SMTP_SUBMISSION_TLS_ADDRESSES: "${SMTP_TLS_ADDR}"
      HEDWI_SMTP_MONITOR_ADDRESSES: ""
      HEDWI_SMTP_MAILLOG_PATH: "/tmp/maillog.log"
    depends_on:
      - hub

  imap:
    image: ${DOCKER_REGISTRY}hedwi/hedwi-imap:latest
    command: ["/data/www/hedwi-imap/hedwi-imap"]
    restart: always
    tty: true
    volumes:
      - ./imap/logs:/data/www/hedwi-imap/logs
      - ./imap/certs:/tmp/hedwi_certs
    network_mode: "host"
    environment:
      HEDWI_IMAP_ADDR: "${IMAP_ADDR}"
      HEDWI_IMAP_TLS_ADDR: "${IMAP_TLS_ADDR}"
    depends_on:
      - hub

  nginx:   #nginx
    image: ${DOCKER_REGISTRY}hedwi/nginx:1.22  #nginx镜像，如果镜像容器没有会去自动拉取
    container_name: hedwi_nginx       #容器的名称
    restart: always             #跟随docker的启动而启动
    volumes:                    #挂载卷命令
      - ./nginx/conf/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/logs/access.log:/var/log/nginx_access.log
      - ./nginx/logs/error.log:/var/log/nginx_error.log
      #- ./nginx/logs/inbox.error.log:/var/log/nginx/inbox.error.log
      #- ./nginx/logs/access.log:/var/log/nginx/access.log
      #- ./nginx/logs/error.log:/var/log/nginx/error.log
      - ./nginx/conf.d/inbox.conf:/etc/nginx/conf.d/default.conf #映射配置文件
      - ./nginx/certs:/etc/nginx/certs:rw
    depends_on:
      - web
    network_mode: "host"

  
volumes:
    crdb:
    redis:
    conf:
    nginx:
    minio:
    office-api:
    meet-server:
    hub:
    smtp:
    imap:
